================
Multiplication before Addition
================

;; (2 + 2) * 2 = 8
;; 2 + (2 * 2) = 6
2 + 2 * 2;

---

(block
 (return
  (binary_add
   (integer_literal)
   (binary_multiply
    (integer_literal)
    (integer_literal)))))


================
Explicit Addition before Multiplication w/ Parens
================

;; (2 + 2) * 2 = 8  (wrong)
;; 2 + (2 * 2) = 6
(2 + 2) * 2;

---

(block
 (return
  (binary_multiply
   (binary_add
    (integer_literal)
    (integer_literal))
   (integer_literal))))


================
Addition before Equality
================

;; (2 = 2) + 2  (wrong)
;; 2 = (2 + 2)
2 = 2 + 2;

---

(block
 (return
  (cast
   (binary_equal
    (integer_literal)
    (binary_add
     (integer_literal)
     (integer_literal))))))

---

main (exported) : i64(i32 %0, ptr %1, ptr %2):
  bb0:
    %3 = alloca i32
    store i32 %0 into %3
    %4 = alloca ptr
    store ptr %1 into %4
    %5 = alloca ptr
    store ptr %2 into %5
    ;; The important part
    %6 = add i64 2, 2
    %7 = eq i64 2, %6
    %8 = zext i1 %7 to i64
    return i64 %8
