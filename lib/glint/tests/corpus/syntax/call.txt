================
() following anything is a call
:syntax
================

foo();

---

(block (call (name)))

================
Multiple Unseparated Expressions Becomes Call
:syntax
================

foo 69;

---

(block (call (name) (integer_literal)))

================
Multiple Separated Expressions Doesn't Become Call
:syntax
================

foo, 69;

---

(block (name) (integer_literal))

================
Multiple Expressions w/ Soft Separated Arguments Becomes Call
:syntax
================

foo 69, 42;

---

(block (call (name) (integer_literal) (integer_literal)))

================
LISP-like, no arguments
:syntax
================

(foo);

---

(block (name))

================
LISP-like, one argument
:syntax
================

(foo 69);

---

(block (call (name) (integer_literal)))

================
LISP-like, two arguments, soft separated
:syntax
================

(foo 69, 42);

---

(block (call (name) (integer_literal) (integer_literal)))

================
LISP-like, two arguments, soft separated, trailing
:syntax
================

(foo 69, 42, );

---

(block (call (name) (integer_literal) (integer_literal)))
